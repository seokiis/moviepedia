{"ast":null,"code":"var _jsxFileName = \"/Users/kimseokhee/Desktop/dive_into_React/movie_review/src/contexts/LocaleContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocaleContext = /*#__PURE__*/createContext();\nexport function LocaleProvider(_ref) {\n  _s();\n  let {\n    defaultValue = \"ko\",\n    children\n  } = _ref;\n  const [locale, setLocale] = useState(defaultValue);\n  return /*#__PURE__*/_jsxDEV(LocaleContext.Provider, {\n    value: {\n      locale,\n      setLocale\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(LocaleProvider, \"5lL0lP5nSA2wemY1v5Fq/WntddI=\");\n_c = LocaleProvider;\nexport function useLocale() {\n  _s2();\n  const context = useContext(LocaleContext);\n  if (!context) {\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n  }\n  return context.locale;\n}\n_s2(useLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useSetLocale() {\n  _s3();\n  const context = useContext(LocaleContext);\n  if (!context) {\n    throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n  }\n  return context.setLocale;\n}\n_s3(useSetLocale, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LocaleProvider\");","map":{"version":3,"names":["createContext","useState","useContext","LocaleContext","LocaleProvider","defaultValue","children","locale","setLocale","useLocale","context","Error","useSetLocale"],"sources":["/Users/kimseokhee/Desktop/dive_into_React/movie_review/src/contexts/LocaleContext.js"],"sourcesContent":["import { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useContext } from \"react\";\n\nconst LocaleContext = createContext();\n\nexport function LocaleProvider({ defaultValue = \"ko\", children }) {\n    const [locale, setLocale] = useState(defaultValue);\n\n    return (\n        <LocaleContext.Provider value={{ locale, setLocale }}>\n            {children}\n        </LocaleContext.Provider>\n    );\n}\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n    if (!context) {\n        throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n    }\n    return context.locale;\n}\n\nexport function useSetLocale() {\n    const context = useContext(LocaleContext);\n    if (!context) {\n        throw new Error(\"반드시 LocaleProvider 안에서 사용해야 합니다.\");\n    }\n    return context.setLocale;\n}\n"],"mappings":";;;;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,OAAO;AAAC;AAEnC,MAAMC,aAAa,gBAAGH,aAAa,EAAE;AAErC,OAAO,SAASI,cAAc,OAAoC;EAAA;EAAA,IAAnC;IAAEC,YAAY,GAAG,IAAI;IAAEC;EAAS,CAAC;EAC5D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAACI,YAAY,CAAC;EAElD,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEE,MAAM;MAAEC;IAAU,CAAE;IAAA,UAChDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC;AAAC,GAReF,cAAc;AAAA,KAAdA,cAAc;AAU9B,OAAO,SAASK,SAAS,GAAG;EAAA;EACxB,MAAMC,OAAO,GAAGR,UAAU,CAACC,aAAa,CAAC;EACzC,IAAI,CAACO,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACvD;EACA,OAAOD,OAAO,CAACH,MAAM;AACzB;AAAC,IANeE,SAAS;AAQzB,OAAO,SAASG,YAAY,GAAG;EAAA;EAC3B,MAAMF,OAAO,GAAGR,UAAU,CAACC,aAAa,CAAC;EACzC,IAAI,CAACO,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;EACvD;EACA,OAAOD,OAAO,CAACF,SAAS;AAC5B;AAAC,IANeI,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}