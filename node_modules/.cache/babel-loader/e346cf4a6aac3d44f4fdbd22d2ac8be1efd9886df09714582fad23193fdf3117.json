{"ast":null,"code":"var _jsxFileName = \"/Users/kimseokhee/Desktop/dive_into_React/movie_review/src/components/App.js\",\n  _s = $RefreshSig$();\nimport ReviewList from \"./ReviewList\";\nimport { useEffect, useState } from \"react\";\nimport { deleteReview, getReviews, updateReview } from \"../api\";\nimport ReviewForm from \"./ReviewForm\";\nimport { createReview } from \"../api\";\nimport useAsync from \"../hooks/useAsync\";\nimport { useCallback } from \"react\";\nimport LocaleContext from \"../contexts/LocaleContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LIMIT = 6;\nfunction App() {\n  _s();\n  const [locale, setLocale] = useState(\"ko\");\n  //최신순, 베스트순\n  const [order, setOrder] = useState(\"createdAt\");\n  //삭제 함수(선택 된 거 빼고 items로 바꿔줌.)\n  const [items, setItems] = useState([]);\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\n  const [offset, setOffset] = useState(0);\n  const [hasNext, setHasNext] = useState(false);\n  const [isLoading, loadingError, getReviewsAsync] = useAsync(getReviews);\n  const handleNewestClick = () => setOrder(\"createdAt\");\n  const handleBestClick = () => setOrder(\"rating\");\n  const handleLoadMore = () => {\n    handleLoad({\n      order,\n      offset,\n      limit: LIMIT\n    });\n  };\n  const handleDelete = async id => {\n    const result = await deleteReview(id);\n    if (!result) return;\n    //비동기로 결과를 참조하니까 setter함수는 콜백으로 사용해야 한다.\n    // const nextItems = items.filter((item) => item.id !== id);\n    // setItems(nextItems);\n    setItems(prevItems => items.filter(item => item.id !== id));\n  };\n\n  //리뷰 데이터 불러오고 세팅\n  //setter 함수는 디펜던시 리스트에 따로 추가할 필요 없다.\n  const handleLoad = useCallback(async options => {\n    let result = await getReviewsAsync(options);\n    if (!result) return;\n    const {\n      reviews,\n      paging\n    } = result;\n    if (options.offset === 0) {\n      setItems(reviews);\n    } else {\n      setItems(prevItems => [...prevItems, ...reviews]);\n    }\n    setOffset(options.offset + reviews.length);\n    setHasNext(paging.hasNext);\n  }, [getReviewsAsync]);\n\n  //비동기로 일어나니까 콜백 함수로 일어나야함.\n  const handleCreateSuccess = review => {\n    setItems(prevItems => [review, ...prevItems]);\n  };\n  const handleUpdateSuccess = review => {\n    setItems(prevItems => {\n      const splitIdx = prevItems.findIndex(item => item.id === review.id);\n      return [\n      //slice() 메서드는 어떤 배열의 begin 부터 end 까지(end 미포함)에 대한\n      //복사본을 새로운 배열 객체로 반환합니다. 원본 배열은 바뀌지 않습니다.\n      ...prevItems.slice(0, splitIdx), review, ...prevItems.splice(splitIdx + 1)];\n    });\n  };\n\n  //이렇게 되면 handleLoad가 실행되면 setItems가 실행되고, setItems가 실해오되면, App이 재실행 되기 된다.\n  //App이 재실행되면, handleload가 다시 실행되고 무한 반복이 된다.\n  //useEffect안에 handleload를 넣어주자.\n  useEffect(() => {\n    handleLoad({\n      order,\n      offset: 0,\n      limit: LIMIT\n    });\n  }, [order, handleLoad]);\n  return (\n    /*#__PURE__*/\n    //공유할 범위를 감싸고 공유할 값을 value로 내려주면 된다.\n    _jsxDEV(LocaleContext.Provider, {\n      value: \"ko\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNewestClick,\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBestClick,\n            children: \"\\uBCA0\\uC2A4\\uD2B8\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReviewForm, {\n          onSubmit: createReview,\n          onSubmitSuccess: handleCreateSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReviewList, {\n          items: sortedItems,\n          onDelete: handleDelete,\n          onUpdate: updateReview,\n          onUpdateSuccess: handleUpdateSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), hasNext && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isLoading,\n          onClick: handleLoadMore,\n          children: \"\\uB354\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), (loadingError === null || loadingError === void 0 ? void 0 : loadingError.mesage) && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: loadingError.mesage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"l1LaW5PpcrRW4fRnVsLoedVEZPE=\", false, function () {\n  return [useAsync];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ReviewList","useEffect","useState","deleteReview","getReviews","updateReview","ReviewForm","createReview","useAsync","useCallback","LocaleContext","LIMIT","App","locale","setLocale","order","setOrder","items","setItems","sortedItems","sort","a","b","offset","setOffset","hasNext","setHasNext","isLoading","loadingError","getReviewsAsync","handleNewestClick","handleBestClick","handleLoadMore","handleLoad","limit","handleDelete","id","result","prevItems","filter","item","options","reviews","paging","length","handleCreateSuccess","review","handleUpdateSuccess","splitIdx","findIndex","slice","splice","mesage"],"sources":["/Users/kimseokhee/Desktop/dive_into_React/movie_review/src/components/App.js"],"sourcesContent":["import ReviewList from \"./ReviewList\";\nimport { useEffect, useState } from \"react\";\nimport { deleteReview, getReviews, updateReview } from \"../api\";\nimport ReviewForm from \"./ReviewForm\";\nimport { createReview } from \"../api\";\nimport useAsync from \"../hooks/useAsync\";\nimport { useCallback } from \"react\";\nimport LocaleContext from \"../contexts/LocaleContext\";\n\nconst LIMIT = 6;\n\nfunction App() {\n    const [locale, setLocale] = useState(\"ko\");\n    //최신순, 베스트순\n    const [order, setOrder] = useState(\"createdAt\");\n    //삭제 함수(선택 된 거 빼고 items로 바꿔줌.)\n    const [items, setItems] = useState([]);\n    const sortedItems = items.sort((a, b) => b[order] - a[order]);\n\n    const [offset, setOffset] = useState(0);\n    const [hasNext, setHasNext] = useState(false);\n\n    const [isLoading, loadingError, getReviewsAsync] = useAsync(getReviews);\n\n    const handleNewestClick = () => setOrder(\"createdAt\");\n    const handleBestClick = () => setOrder(\"rating\");\n\n    const handleLoadMore = () => {\n        handleLoad({ order, offset, limit: LIMIT });\n    };\n    const handleDelete = async (id) => {\n        const result = await deleteReview(id);\n        if (!result) return;\n        //비동기로 결과를 참조하니까 setter함수는 콜백으로 사용해야 한다.\n        // const nextItems = items.filter((item) => item.id !== id);\n        // setItems(nextItems);\n        setItems((prevItems) => items.filter((item) => item.id !== id));\n    };\n\n    //리뷰 데이터 불러오고 세팅\n    //setter 함수는 디펜던시 리스트에 따로 추가할 필요 없다.\n    const handleLoad = useCallback(\n        async (options) => {\n            let result = await getReviewsAsync(options);\n            if (!result) return;\n\n            const { reviews, paging } = result;\n\n            if (options.offset === 0) {\n                setItems(reviews);\n            } else {\n                setItems((prevItems) => [...prevItems, ...reviews]);\n            }\n            setOffset(options.offset + reviews.length);\n            setHasNext(paging.hasNext);\n        },\n        [getReviewsAsync]\n    );\n\n    //비동기로 일어나니까 콜백 함수로 일어나야함.\n    const handleCreateSuccess = (review) => {\n        setItems((prevItems) => [review, ...prevItems]);\n    };\n\n    const handleUpdateSuccess = (review) => {\n        setItems((prevItems) => {\n            const splitIdx = prevItems.findIndex(\n                (item) => item.id === review.id\n            );\n            return [\n                //slice() 메서드는 어떤 배열의 begin 부터 end 까지(end 미포함)에 대한\n                //복사본을 새로운 배열 객체로 반환합니다. 원본 배열은 바뀌지 않습니다.\n                ...prevItems.slice(0, splitIdx),\n                review,\n                ...prevItems.splice(splitIdx + 1),\n            ];\n        });\n    };\n\n    //이렇게 되면 handleLoad가 실행되면 setItems가 실행되고, setItems가 실해오되면, App이 재실행 되기 된다.\n    //App이 재실행되면, handleload가 다시 실행되고 무한 반복이 된다.\n    //useEffect안에 handleload를 넣어주자.\n    useEffect(() => {\n        handleLoad({ order, offset: 0, limit: LIMIT });\n    }, [order, handleLoad]);\n\n    return (\n        //공유할 범위를 감싸고 공유할 값을 value로 내려주면 된다.\n        <LocaleContext.Provider value={\"ko\"}>\n            <div>\n                <div>\n                    <button onClick={handleNewestClick}>최신순</button>\n                    <button onClick={handleBestClick}>베스트순</button>\n                </div>\n                <ReviewForm\n                    onSubmit={createReview}\n                    onSubmitSuccess={handleCreateSuccess}\n                />\n                <ReviewList\n                    items={sortedItems}\n                    onDelete={handleDelete}\n                    onUpdate={updateReview}\n                    onUpdateSuccess={handleUpdateSuccess}\n                />\n                {hasNext && (\n                    <button disabled={isLoading} onClick={handleLoadMore}>\n                        더보기\n                    </button>\n                )}\n                {loadingError?.mesage && <span>{loadingError.mesage}</span>}\n            </div>\n        </LocaleContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}